import java.sql.Date;
import java.util.ArrayList;


class Packet
{
	private char PacketType;
	private String SenderID;
	private double SeqNumber;
	private Date interval; 
	
	public Packet(char p_type, String s_id, double seq_num, Date interval_time)
	{
		PacketType=p_type;
		SenderID=s_id;
		SeqNumber=seq_num;
		interval=interval_time;
	}
	
	public char getpactype() {return PacketType;}
	public String getsenderid(){return SenderID;}
	public double getseqnum(){return SeqNumber;}
	public Date getinterval(){return interval;}
	
}


class Nodes
{		
		ArrayList<Packet> pac_in_node;		 
		public Nodes()
		{
			pac_in_node = new ArrayList <Packet>();
		}		
		
		public ArrayList<Packet> getpacinnode()
		{
			return pac_in_node;
		}
}


class PacketReceiver
{
		ArrayList<Packet> My_rec_pac;
		
		public  PacketReceiver()
		{
			My_rec_pac = new ArrayList <Packet>();
		}
		
		
		public void populatereceiver(Nodes ob)
		{
			for(Packet a:ob.getpacinnode())
			{
				My_rec_pac.add(a);
			}
		}
		
				
		public ArrayList<Packet> getReceiver_transaction()
		{
			return My_rec_pac;
		}	
		
				
		public void remove_trans()
		{
			My_rec_pac.clear();
		}
		
		public boolean check_empty()
		{
		return My_rec_pac.isEmpty();
		}
}


class ReceivedPacket
{
	ArrayList<Packet> Rec_pac;
	public ReceivedPacket()
	{
		Rec_pac=new ArrayList<Packet>();

	}

	public void populatestorage(PacketReceiver ob)
	{
		
		if (ob.check_empty())
		{
			ob.remove_trans();
		}
		else
		{
			for(Packet a:ob.getReceiver_transaction())
			{
			
				Rec_pac.add(a);
			}
		
			ob.remove_trans();

		}
	}
	
	
	public ArrayList<Packet> getStorage_transaction()
	{
		return Rec_pac;
	}				
}



